#!/bin/bash
# Cassandra database
### BEGIN INIT INFO
# Provides:             cassandra
# Required-Start:       $remote_fs $all
# Required-Stop:
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Apache Cassandra database server
# Description:          Apache Cassandra database server
### END INIT INFO

. /lib/lsb/init-functions

CASSANDRA_HOME=/home/rushi/Softwares/dsc-cassandra-3.0.9
CASSANDRA_BIN=$CASSANDRA_HOME/bin/cassandra
CASSANDRA_NODETOOL=$CASSANDRA_HOME/bin/nodetool
CASSANDRA_LOG=$CASSANDRA_HOME/logs/cassandra.log
CASSANDRA_PID=/var/run/cassandra.pid
CASSANDRA_LOCK=/var/lock/subsys/cassandra
PROGRAM="cassandra"
USER=db

if [ ! -f $CASSANDRA_BIN ]; then
  echo "File not found: $CASSANDRA_BIN"
  exit 1
fi

RETVAL=0

start() {
  log_action_begin_msg "Starting $PROGRAM"
  if [ -f $CASSANDRA_PID ] && checkpid `cat $CASSANDRA_PID`; then
    echo "Cassandra is already running."
    exit 0
  fi
  
  log_action_msg "Executing command as user $USER"
  echo "Executing command as user $USER"

  #TMPFILE=/tmp/cassandra.$RANDOM
  #su --login $USER --command "$CASSANDRA_BIN -p $TMPFILE" >> $CASSANDRA_LOG 2>&1
  #su --login $USER --command $CASSANDRA_BIN
  RETVAL=$?
  #cat $TMPFILE > $CASSANDRA_PID
  #rm $TMPFILE
  sudo $CASSANDRA_BIN
  sleep 10
  if [ $RETVAL -eq 0 ]; then
    touch $CASSANDRA_LOCK
    log_action_end_msg $RETVAL
  else
    log_failure_msg "returned $RETVAL on startup"
  fi
  return $RETVAL
}

stop() {
  log_action_begin_msg "Stopping $PROGRAM: "
  if [ ! -f $CASSANDRA_PID ]; then
    log_action_msg "Cassandra is already stopped."
    exit 0
  fi
  $CASSANDRA_NODETOOL disablegossip
  $CASSANDRA_NODETOOL disablethrift
  $CASSANDRA_NODETOOL drain
  if kill `cat $CASSANDRA_PID`; then
    RETVAL=0
    rm -f $CASSANDRA_LOCK
    log_action_end_msg 0
  else
    RETVAL=1
    log_failure_msg "can't kill PID $CASSANDRA_PID"
  fi
  return $RETVAL
}

status_fn() {
  if [ -f $CASSANDRA_PID ] && checkpid `cat $CASSANDRA_PID`; then
    echo "Cassandra is running."
    exit 0
  else
    echo "Cassandra is stopped."
    exit 1
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status_fn
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo $"Usage: $PROGRAM {start|stop|restart|status}"
    RETVAL=3
esac
